jpsType: update
id: mysql-galera-cluster
name: MariaDB Galera Cluster
description: MariaDB Galera Auto Clustering

success:
  text: "../texts/phpmyadmin-credentials.md"

nodeGroupAlias:
  "${targetNodes.nodeGroup}": sqldb

globals:
  PATH: "${settings.path}"
  DB_USER: "${settings.db_user}"
  DB_PASS: "${settings.db_pass}"
  CLUSTER_NAME: galera-cluster
  GALERA_CONF: "/etc/mysql/conf.d/galera.cnf"
  CUSTOM_CONF: "${settings.custom_conf}"

onAfterScaleOut[sqldb]:
  - forEach(event.response.nodes):
      initialSetup:
        id: "${@i.id}"
  - setupSeeds
  - forEach(event.response.nodes):
    - setupInstance:
        id: "${@i.id}"
    - cmd[${@i.id}]: "/etc/init.d/mysql restart"
      user: root

onAfterScaleIn[sqldb]:
  setupSeeds
  
onAfterMigrate:
  - script: delete MANIFEST.id; return {result:0, jps:MANIFEST};
  - install: ${response.jps}
    nodeGroup: sqldb
    settings:
      db_user: "jelastic-${fn.random}"
      db_pass: "${fn.password(20)}"
      path: ${globals.PATH}

onAfterClone:
  - script: delete MANIFEST.id; return {result:0, jps:MANIFEST};
  - install: ${response.jps}
    envName: ${event.response.env.envName}
    nodeGroup: sqldb
    settings:
      db_user: "jelastic-${fn.random}"
      db_pass: "${fn.password(20)}"
      path: ${globals.PATH}

onBeforeStop:
  - forEach(i:nodes.sqldb):
      env.control.StopNode [${@i.id}]
     
onBeforeRestartNode[sqldb]:
  - forEach(i:nodes.sqldb):
      cmd [${@i.id}]: sudo jem service restart
  - stopEvent:
      type: success
      message: Galera cluster successfully restarted
   
onInstall:
  - resetCluster
  - initialSetup:
      id: "sqldb"
  - setupSeeds
  - setupInstance:
      id: "sqldb"
  - cmd[${nodes.sqldb.master.id}]: "jem service stop; sleep 3; pkill -9 mysql; pkill -9 mariadb; galera_new_cluster; sleep 3; jem service start;"
    user: root
  - forEach(n:nodes.sqldb):
      if (!${@n.ismaster}):
        cmd[${@n.id}]: "jem service restart"
  - env.file.AddFavorite:
    nodeGroup: sqldb
    path: /var/lib/mysql/grastate.dat
    keyword: grastate.dat
    isDir: false
        
actions:
  initialSetup:
    - setupUser:
        id: "${this.id}"
    - setNodeDisplayName[${this.id}]: Galera
      if (!/settings.custom_conf/.test("${globals.CUSTOM_CONF}")):
        cmd[${this.id}]: cd /etc/mysql/conf.d && wget ${settings.custom_conf} &>> /var/log/run.log
    - cmd[${this.id}]: |-
        wget ${globals.PATH}/scripts/mysql -O /etc/init.d/mysql &>> /var/log/run.log
      user: root
    - cmd[${this.id}]: |-
        wget ${globals.PATH}/scripts/wsrep-notify.sh -O /var/lib/jelastic/bin/wsrep-notify.sh &>> /var/log/run.log
        wget ${globals.PATH}/configs/galera.cnf -O ${globals.GALERA_CONF} &>> /var/log/run.log
        chmod 700 /var/lib/jelastic/bin/wsrep-notify.sh &>> /var/log/run.log
        
  setupUser:
    cmd[${this.id}]: |-
      wget ${globals.PATH}/scripts/setupUser.sh -O ~/setupUser.sh &>> /var/log/run.log
      bash ~/setupUser.sh ${globals.DB_USER} ${globals.DB_PASS} &>> /var/log/run.log
    user: root

  setupSeeds:
    script:
    - var resp = jelastic.env.control.GetEnvInfo('${env.envName}', session);
    - if (resp.result != 0) return resp;
    - var nodes = [];
    - for (var i = 0, n = resp.nodes; i < n.length; i++)
    - "  n[i].nodeGroup == nodeGroup ? nodes.push('node' + n[i].id) : 0"
    - 'resp = {result:0, onAfterReturn: {}};'
    - resp.onAfterReturn['cmd['+ nodeGroup +']'] = 'sed -i "s|wsrep_cluster_address.*|wsrep_cluster_address
      = gcomm://'+ nodes.join(',') +'|g " ${globals.GALERA_CONF}';
    - resp.onAfterReturn['user'] = 'root';
    - return resp;
    nodeGroup: sqldb
  
  setupInstance:
    cmd[${this.id}]: |-
      sed -i "s/server_id.*/server_id = $(echo '${env.region}' | md5sum | grep -Eo "[[:digit:]]{3}"  | head -n1)/" ${globals.GALERA_CONF}
      sed -i "s/bind-address.*/bind-address = $(hostname | cut -d'-' -f 1)/" ${globals.GALERA_CONF}
      sed -i "s/report_host.*/report_host = $(hostname | cut -d'-' -f 1)/" ${globals.GALERA_CONF}
      sed -i "s/wsrep_cluster_name.*/wsrep_cluster_name = ${globals.CLUSTER_NAME}/" ${globals.GALERA_CONF}
      sed -i "s/wsrep_node_name.*/wsrep_node_name = $(hostname | cut -d'-' -f 1)/" ${globals.GALERA_CONF}
      sed -i "s/wsrep_node_address.*/wsrep_node_address = $(hostname | cut -d'-' -f 1)/" ${globals.GALERA_CONF}
    
  resetCluster:
    - cmd[sqldb]: |-
        [ -f ${globals.GALERA_CONF} ] && rm -f ${globals.GALERA_CONF}
        [ -f /var/lib/mysql/grastate.dat ] && rm -f /var/lib/mysql/grastate.dat
        [ -f /var/lib/mysql/gvwstate.dat ] && rm -f /var/lib/mysql/gvwstate.dat
        [ -f /var/lib/mysql/galera.cache ] && rm -f /var/lib/mysql/galera.cache
        jem service stop; pkill -9 mysql; pkill -9 mariadb; jem service start
      user: root
 
